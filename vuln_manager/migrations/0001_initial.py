# Generated by Django 4.2.10 on 2025-06-13 00:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('admin', 'Administrador'), ('analista', 'Analista'), ('cliente', 'Cliente')], default='cliente', max_length=20, verbose_name='Rol')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('empresa', models.CharField(blank=True, max_length=100, null=True, verbose_name='Empresa')),
                ('cargo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['username'],
                'permissions': [('can_create_users', 'Puede crear usuarios'), ('can_assign_clients', 'Puede asignar clientes a analistas'), ('can_manage_assets', 'Puede gestionar activos'), ('can_view_assets', 'Puede ver activos'), ('can_manage_vulnerabilities', 'Puede gestionar vulnerabilidades'), ('can_view_vulnerabilities', 'Puede ver vulnerabilidades')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Activo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('hardware', 'Hardware'), ('software', 'Software'), ('servicio', 'Servicio'), ('red', 'Dispositivo de Red'), ('otro', 'Otro')], max_length=20)),
                ('descripcion', models.TextField(blank=True)),
                ('palabras_clave', models.TextField(help_text='Palabras clave separadas por comas para búsqueda de CVEs')),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('puerto', models.IntegerField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Activo',
                'verbose_name_plural': 'Activos',
            },
        ),
        migrations.CreateModel(
            name='ActivoVulnerabilidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_deteccion', models.DateField()),
                ('fecha_resolucion', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('EN_PROGRESO', 'En Progreso'), ('RESUELTO', 'Resuelto'), ('FALSO_POSITIVO', 'Falso Positivo')], max_length=20)),
                ('notas', models.TextField(blank=True)),
                ('activo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vulnerabilidades', to='vuln_manager.activo')),
            ],
            options={
                'verbose_name': 'Vulnerabilidad de Activo',
                'verbose_name_plural': 'Vulnerabilidades de Activos',
            },
        ),
        migrations.CreateModel(
            name='Vulnerabilidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cve_id', models.CharField(max_length=20, unique=True)),
                ('descripcion_en', models.TextField(verbose_name='Descripción (Inglés)')),
                ('descripcion_es', models.TextField(verbose_name='Descripción (Español)')),
                ('severidad', models.CharField(choices=[('critica', 'Crítica'), ('alta', 'Alta'), ('media', 'Media'), ('baja', 'Baja')], max_length=20)),
                ('status', models.CharField(choices=[('published', 'Publicado'), ('rejected', 'Rechazado'), ('draft', 'Borrador')], default='published', max_length=20)),
                ('fecha_publicacion', models.DateField()),
                ('fecha_modificacion', models.DateField()),
                ('fecha_deteccion', models.DateField(auto_now_add=True)),
                ('cvss2_score', models.FloatField(blank=True, null=True, verbose_name='Score CVSS v2')),
                ('cvss2_severidad', models.CharField(blank=True, max_length=20, null=True, verbose_name='Severidad CVSS v2')),
                ('cvss2_vector', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vector CVSS v2')),
                ('cvss3_score', models.FloatField(blank=True, null=True, verbose_name='Score CVSS v3')),
                ('cvss3_severidad', models.CharField(blank=True, choices=[('critica', 'Crítica'), ('alta', 'Alta'), ('media', 'Media'), ('baja', 'Baja')], max_length=20, null=True, verbose_name='Severidad CVSS v3')),
                ('cvss3_vector', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vector CVSS v3')),
                ('referencias', models.JSONField(blank=True, default=list, verbose_name='URLs de Referencia')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activos', models.ManyToManyField(related_name='vulnerabilidades_asociadas', through='vuln_manager.ActivoVulnerabilidad', to='vuln_manager.activo')),
            ],
            options={
                'verbose_name': 'Vulnerabilidad',
                'verbose_name_plural': 'Vulnerabilidades',
            },
        ),
        migrations.CreateModel(
            name='Tarea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('cve', 'Actualización de CVEs'), ('scan', 'Escaneo de Activos')], max_length=20)),
                ('descripcion', models.TextField(blank=True)),
                ('programacion', models.CharField(help_text="Expresión cron (ej: '0 0 * * *' para diario a medianoche)", max_length=100)),
                ('ultima_ejecucion', models.DateTimeField(blank=True, null=True)),
                ('proxima_ejecucion', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('programada', 'Programada'), ('ejecutando', 'Ejecutando'), ('completada', 'Completada'), ('error', 'Error'), ('cancelada', 'Cancelada')], default='programada', max_length=20)),
                ('activa', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tareas_creadas', to=settings.AUTH_USER_MODEL, verbose_name='Creada por')),
            ],
            options={
                'verbose_name': 'Tarea Programada',
                'verbose_name_plural': 'Tareas Programadas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EjecucionTarea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField(auto_now_add=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('exitoso', 'Exitoso'), ('error', 'Error'), ('cancelado', 'Cancelado')], max_length=20)),
                ('resultado', models.TextField(blank=True)),
                ('error', models.TextField(blank=True)),
                ('ejecutada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ejecuciones_tarea', to=settings.AUTH_USER_MODEL, verbose_name='Ejecutada por')),
                ('tarea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ejecuciones', to='vuln_manager.tarea')),
            ],
            options={
                'verbose_name': 'Ejecución de Tarea',
                'verbose_name_plural': 'Ejecuciones de Tareas',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('analistas', models.ManyToManyField(blank=True, related_name='clientes', to=settings.AUTH_USER_MODEL, verbose_name='Analistas')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='Alerta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('nueva', 'Nueva'), ('vista', 'Vista'), ('en_proceso', 'En Proceso'), ('resuelta', 'Resuelta'), ('ignorada', 'Ignorada')], default='nueva', max_length=20)),
                ('notas', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('fecha_resolucion', models.DateTimeField(blank=True, null=True)),
                ('activo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vuln_manager.activo')),
                ('analista_asignado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alertas_asignadas', to=settings.AUTH_USER_MODEL, verbose_name='Analista asignado')),
                ('resuelta_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alertas_resueltas', to=settings.AUTH_USER_MODEL, verbose_name='Resuelta por')),
                ('vulnerabilidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vuln_manager.vulnerabilidad')),
            ],
            options={
                'verbose_name': 'Alerta',
                'verbose_name_plural': 'Alertas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AddField(
            model_name='activovulnerabilidad',
            name='vulnerabilidad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activo_vulnerabilidad_set', to='vuln_manager.vulnerabilidad'),
        ),
        migrations.AddField(
            model_name='activo',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activos', to='vuln_manager.cliente'),
        ),
        migrations.CreateModel(
            name='AnalistaCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de asignación')),
                ('analista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relaciones_analista', to=settings.AUTH_USER_MODEL, verbose_name='Analista')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relaciones_cliente', to=settings.AUTH_USER_MODEL, verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Relación Analista-Cliente',
                'verbose_name_plural': 'Relaciones Analista-Cliente',
                'ordering': ['-fecha_asignacion'],
                'unique_together': {('analista', 'cliente')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='activovulnerabilidad',
            unique_together={('activo', 'vulnerabilidad')},
        ),
    ]
